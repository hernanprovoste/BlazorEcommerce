@page "/product/{id:int}"
@inject IProductService ProductService

@if (product == null)
{
    <span>@message</span>
}
else
{
    <MudStack Spacing="4">
        <MudPaper Class="pa-4">
            <MudStack Row="true">
                <MudImage Src="@product.ImageUrl" Width="200" Height="300" Alt="@product.Title" Elevation="25" />
                <MudStack Justify="Justify.Center" Spacing="0">
                    <MudLink Href="#" Typo="Typo.h4">
                        @product.Title
                    </MudLink>
                    <MudText Typo="Typo.body2">@product.Description</MudText>
                    <MudText Typo="Typo.h6">
                        $@product.Price
                    </MudText>
                </MudStack>
            </MudStack>
        </MudPaper>
    </MudStack>
}

@code {
    private Product? product = null;
    private string message = string.Empty;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...😅";
        var result = await ProductService.GetProductById(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
        }
        
    }

}