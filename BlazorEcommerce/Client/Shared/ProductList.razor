@inject IProductService ProductService

@if (ProductService.Products is null || ProductService.Products.Count == 0)
{
    <span>Loading Products...</span>
}
else
{
    @foreach (var product in ProductService.Products)
    {
        var url = "/product/" + product.Id;
        <MudStack Spacing="4">
            <MudPaper Class="pa-4">
                <MudStack Row="true">
                    <MudImage Src="@product.ImageUrl" Width="200" Height="300" Alt="@product.Title" Elevation="25" />
                    <MudStack Justify="Justify.Center" Spacing="0">
                        <MudLink Href="@url" Typo="Typo.h4">
                            @product.Title
                        </MudLink>
                        <MudText Typo="Typo.body2">@product.Description</MudText>
                        <MudText Typo="Typo.h6">
                            $@product.Price
                        </MudText>
                    </MudStack>
                </MudStack>
            </MudPaper>
        </MudStack>
        
    }
}


@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();
    }
}
